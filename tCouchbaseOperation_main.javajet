<%@ jet imports="
java.util.List
org.talend.core.model.process.INode
org.talend.core.model.process.ElementParameterParser
org.talend.core.model.metadata.IMetadataTable
org.talend.core.model.metadata.IMetadataColumn
org.talend.core.model.process.IConnection
org.talend.core.model.process.IConnectionCategory
org.talend.designer.codegen.config.CodeGeneratorArgument
org.talend.core.model.metadata.types.JavaTypesManager
org.talend.core.model.metadata.types.JavaType
org.talend.core.model.process.EConnectionType" 
%> 

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String operation = ElementParameterParser.getValue(node, "__OPERATION__");
String targetID = ElementParameterParser.getValue(node, "__ID__");
String expiration = ElementParameterParser.getValue(node, "__EXPIRATION__");
String setValue = ElementParameterParser.getValue(node, "__VALUE__");
boolean checkResult = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__CHECK_RESULT__"));

List<IMetadataTable> metadatas = node.getMetadataList();
if(metadatas == null || metadatas.size() == 0) {
	return "";
}
IMetadataTable metadata = metadatas.get(0);

%>


String id_<%=cid %> = null;
Object value_<%=cid %> = null;
Integer expiration_<%=cid %> = null;
String message_<%=cid %> = null;
net.spy.memcached.internal.OperationFuture<Boolean> op_<%=cid %> = null;
boolean result_<%=cid %> = true;

id_<%=cid %> = <%=targetID %>;
<% if ("SET".equals(operation)) {%>
  value_<%=cid %> = <%=setValue %>;
  expiration_<%=cid %> = <%=expiration %>;
<% } %>


<% if ("GET".equals(operation)) {%>
  value_<%=cid %> = couchbaseClient_<%=cid %>.get(id_<%=cid %>);

<% } else if ("SET".equals(operation)) {%>
  op_<%=cid %>
   = couchbaseClient_<%=cid %>.set(id_<%=cid %>, expiration_<%=cid %>, value_<%=cid%>);

<% } else if ("DELETE".equals(operation)) {%>
  op_<%=cid %>
   = couchbaseClient_<%=cid %>.delete(id_<%=cid %>);

<% } %>

if(op_<%=cid %> != null && <%=checkResult %>) {
  if(!op_<%=cid %>.get()) {
    message_<%=cid %> = op_<%=cid %>.getStatus().getMessage();
    result_<%=cid %> = false;
  }
}

<%

List<? extends IConnection> outConns = node.getOutgoingConnections();
for(IConnection conn : outConns) {

  if(conn.getLineStyle().equals(EConnectionType.FLOW_MAIN)
   || conn.getLineStyle().equals(EConnectionType.FLOW_MERGE)) {
    String outputConnName = conn.getName();
%>

    // Map the result if appropriate columns are defined.
    <%=outputConnName %>Struct rowTmp_<%=cid%> = new <%=outputConnName %>Struct();
    
    <% if(metadata.getColumn("id") != null) {%>
  	  rowTmp_<%=cid%>.id = id_<%=cid %>;
  	<% } %>

    <% if(metadata.getColumn("result") != null) {%>
      rowTmp_<%=cid%>.result = result_<%=cid %>;
  	<% } %>

    <% if(metadata.getColumn("value") != null) {%>
      rowTmp_<%=cid%>.value = value_<%=cid %>;
  	<% } %>

    <% if(metadata.getColumn("message") != null) {%>
      rowTmp_<%=cid%>.message = message_<%=cid %>;
  	<% } %>

	<%=outputConnName %> = rowTmp_<%=cid%>;

    ++nb_line_<%=cid %>;	

<%
  }
}
%>




